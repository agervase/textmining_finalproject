App.A's Lost Days
by Reuben Bresler

The rest of the file's programs had entered the site a while ago, running processes and algorithms for information concerning the relevant code to help in Aaple's quest for help fighting against the Amazon Fire nation. Aaple, Gyaza, and Boomerang were inside when TheLibrary.exe began to selfcorrupt, sinking bit by bit into the sand. Tpdf did what she could to try to slow the program from disintegrating, using her powers to hold the program extension together by any means she could.

And then they showed up.

The bandits ran a F# .net trap, snagging the helpless app and entangling it in the language's framework. App.A struggled, checking for lines of code to hack through or mistakes in the processes that could be exploited or forced through, but the .net was flexible and well crafted. And Tpdf could only watch on.

"I'm sorry."

-----

R pirates. Object-oriented programs that traverse the wastes, implementing data hiding through multiple instances of pointers referred to as "X," traveling in sands in search of valuable data they stumbled across for trade and barter. And App.A certainly qualified, a giant application from a long-unheard of IP unseen in decades. R is the name of an esoteric programming language used almost exclusively by the Sandboxbenders, a specialization of Google Earthbending. Many have tried to translate and learn the sandboxbending arts, but it's extremely difficult even for Google Earthbenders.

The R pirates, riding huge processes called BTLs returned to their home directory. Dozens of rogue R extensions and BTLs surrounded App.A, still ensnared in the .net code. The leader ransacked App.A's data packets, App.A thrashing about once more and using his giant backend feature to destroy at least one R subroutine, but finding nothing more valuable than Boomerang's club. The leader of the pirates (who was unfazed by the desctuction of the sandsailer since it was a stolen item to begin with), took most of the contents of App.A's files quickly placed them in the trash folder before implementing an update to take their newfound prize to the BTL-headed programs.

In exchange for some rare bytes in a zipped chest file, the BTL-headed merchants acquired App.A. At that moment, App.A hears Aaple's search Whistle function, which calls to App.A and sends him into a furious reboot, lifting the entire F# sled off the ground. The R pirates quickly leave, as R has no true functions because pirates never return anything so they have no need to remain. Left to their own devices, the BTL-headed merchants quickly use Task Manager darts to close App.A before it got too out of control.

And App.A's window was closed.

-----

App.A restarted to find himself in a small, cramped desktop folder alongside some other strange and unique files. An Amazon Fire application is speaking and seems sympathetic at first, but quickly turns harsh and is revealed to be an app store management software program for a traveling band of entertainment programs called Circus. He software updates all of the other trapped apps except for App.A in an attempt to break App.A's will. But while the app store manager is busy downloading the most recent update for a Vulture extension, App.A sneakily autoupdates from a nearby basket of cabbages. Furious, the manager turns to see App.A's disobedience and threatens him with flashy Amazon Fire interface.

That evening, the Circus application is opened. A small visiting subprocess accidentally stumbles into the backend of the program and finds App.A, and he helps the big app to download some hay. The app and the sub bond briefly before the manager returns, and the subprocess returns to find his father program. The manager is speaking to the Circus main page program at the time, claiming that App.A is not yet ready to execute the necessary functions as a part of the Circus application. The Circus main page directory implements the App.A anyway, and App.A is reskinned for the Circus software performance.

A newly festooned App.A is presented to the Circus users as a "LiquidSky File" as opposed to his more correct Apple Air application, since Amazon Fire programs would have no ability to interface with Air technology. The Circus users delight in the new App.A file, but in a way that makes App.A very uncomfortable. While App.A is performing difficult to program tricks, users are laughing at App.A instead of lauding the new programming, making memes and commenting on message boards about the new application's awful update. Unfortunately, App.A's new skin reacts to one of the Fire subroutines, causing a terminal glitch that will destroy the new skin and threaten to damage App.A's main program. App.A crashes, nearly rebooting. He sees the small subprocess from earlier, who encourages App.A to make a run for it. And run he does, finding an Air Drop opportunity and escaping the Amazon Fire device into the Cloud.

-----